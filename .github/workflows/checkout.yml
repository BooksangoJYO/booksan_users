name: CI/CD Docker3

on:
  push:
    branches: [ master ]

env:
  VERSION: ${{ github.sha }}
  IMAGE_NAME: booksan_users

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar
      
      - name: docker image build
        run: docker build -t ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} .
      
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      
      - name: docker Hub push
        run: docker push ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  deploy:
    needs: build-docker-image
    name: Deploy
    runs-on: [ self-hosted, label-go2 ]
    steps:
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      
      - name: Docker deploy
        run: |
          cd /home/ubuntu/${{ env.IMAGE_NAME }}
          # 환경 변수 설정
          export USERNAME=${{ secrets.USERNAME }}
          export IMAGE_NAME=${{ env.IMAGE_NAME }}
          export VERSION=${{ env.VERSION }}
          
          # 새 이미지 pull
          sudo docker pull ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          
          # 컨테이너 재시작
          sudo -E docker-compose up -d
          
          # 미사용 이미지 정리
          sudo docker image prune -af
